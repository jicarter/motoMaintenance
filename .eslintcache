[{"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\index.js":"1","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Moto.js":"2","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\ApplicationViews.js":"3","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\auth\\Login.js":"4","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\nav\\NavBar.js":"5","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\auth\\Register.js":"6","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Home.js":"7","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleList.js":"8","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\auth\\Logout.js":"9","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleProvider.js":"10","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleForm.js":"11","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleDetails.js":"12","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleCard.js":"13","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceList.js":"14","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceProvider.js":"15","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceForm.js":"16","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceDetails.js":"17","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceCard.js":"18"},{"size":429,"mtime":1611939550728,"results":"19","hashOfConfig":"20"},{"size":820,"mtime":1611939550670,"results":"21","hashOfConfig":"20"},{"size":2197,"mtime":1612473900683,"results":"22","hashOfConfig":"20"},{"size":2287,"mtime":1611939550699,"results":"23","hashOfConfig":"20"},{"size":1517,"mtime":1612473900743,"results":"24","hashOfConfig":"20"},{"size":3230,"mtime":1612473900739,"results":"25","hashOfConfig":"20"},{"size":660,"mtime":1612473900686,"results":"26","hashOfConfig":"20"},{"size":1040,"mtime":1612473900713,"results":"27","hashOfConfig":"20"},{"size":324,"mtime":1611939550700,"results":"28","hashOfConfig":"20"},{"size":1630,"mtime":1612473900714,"results":"29","hashOfConfig":"20"},{"size":4218,"mtime":1612473900712,"results":"30","hashOfConfig":"20"},{"size":2182,"mtime":1612473900711,"results":"31","hashOfConfig":"20"},{"size":416,"mtime":1612473900710,"results":"32","hashOfConfig":"20"},{"size":1032,"mtime":1612473900697,"results":"33","hashOfConfig":"20"},{"size":1716,"mtime":1612473900698,"results":"34","hashOfConfig":"20"},{"size":4190,"mtime":1612473900696,"results":"35","hashOfConfig":"20"},{"size":2159,"mtime":1612473900695,"results":"36","hashOfConfig":"20"},{"size":1169,"mtime":1612473900689,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1is6uf3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\index.js",[],["85","86"],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Moto.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\ApplicationViews.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\auth\\Login.js",["87"],"import React, { useRef } from \"react\"\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\"\nimport \"./Login.css\"\n\n\nexport const Login = props => {\n    const email = useRef()\n    const password = useRef()\n    const existDialog = useRef()\n    const history = useHistory()\n\n    const existingUserCheck = () => {\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\n            .then(res => res.json())\n            .then(user => user.length ? user[0] : false)\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n\n        existingUserCheck()\n            .then(exists => {\n                if (exists) {\n                    localStorage.setItem(\"moto_user\", exists.id)\n                    history.push(\"/\")\n                } else {\n                    existDialog.current.showModal()\n                }\n            })\n    }\n\n    return (\n        <main className=\"container--login\">\n        <div className='background__card'>\n\n            <dialog className=\"dialog dialog--auth\" ref={existDialog}>\n                <div>User does not exist</div>\n                <button className=\"button--close\" onClick={e => existDialog.current.close()}>Close</button>\n            </dialog>\n\n            <section>\n                <form className=\"form--login\" onSubmit={handleLogin}>\n                    <h1>Moto-Maintenance</h1>\n                    <h2>Please sign in</h2>\n                    <fieldset>\n                        <label htmlFor=\"inputEmail\"> Email address </label>\n                        <input ref={email} type=\"email\"\n                            id=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Email address\"\n                            required autoFocus />\n                    </fieldset>\n                    <fieldset>\n                        <button type=\"submit\">\n                            Sign in\n                        </button>\n                    </fieldset>\n                </form>\n            </section>\n            <section className=\"link--register\">\n                <Link to=\"/register\">Not a member yet?</Link>\n            </section>\n        </div>\n        </main>\n    )\n}\n\n","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\nav\\NavBar.js",["88","89","90","91"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./NavBar.css\";\r\nimport \"../auth/Login\";\r\nimport { Logout } from \"../auth/Logout\";\r\n\r\nexport const NavBar = (props) => {\r\n    return (\r\n        <ul className=\"navbar\">\r\n            <li className=\"navbar__item active\">\r\n                <Link className=\"navbar__link\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar__link\" to=\"/vehicles\">Vehicles</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <Link className=\"navbar__link\" to=\"/Maintenance\">Maintenance</Link>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n            <div><a href=\"https://bikez.com/main/index.php\" target=\"_blank\">BikeZ Database</a></div>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n            <div><a href=\"https://www.rockymountainatvmc.com/\" target=\"_blank\">Order Parts</a></div>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n            <div><a href=\"https://www.youtube.com/playlist?list=PLQNbY8vNfRmXMBsvYsmT9a9Xi3EQaT0S9\" target=\"_blank\">How-To</a></div>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n            <div><a href=\"https://www.manualslib.com/\" target=\"_blank\">Repair Manuals</a></div>\r\n            </li>\r\n            <li className=\"navbar__item\">\r\n                <button className=\"logOut\" onClick={Logout()}>Logout</button>\r\n            </li>\r\n        </ul>\r\n    )\r\n}","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\auth\\Register.js",["92"],"import React, { useRef } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Login.css\"\r\n\r\nexport const Register = (props) => {\r\n    const firstName = useRef()\r\n    const lastName = useRef()\r\n    const email = useRef()\r\n    const verifyPassword = useRef()\r\n    const conflictDialog = useRef()\r\n    const history = useHistory()\r\n\r\n    const existingUserCheck = () => {\r\n        return fetch(`http://localhost:8088/users?email=${email.current.value}`)\r\n            .then(res => res.json())\r\n            .then(user => !!user.length)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault()\r\n\r\n\r\n        existingUserCheck()\r\n            .then((userExists) => {\r\n                if (!userExists) {\r\n                    fetch(\"http://localhost:8088/users\", {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                            \"Content-Type\": \"application/json\"\r\n                        },\r\n                        body: JSON.stringify({\r\n                            email: email.current.value,\r\n                            name: `${firstName.current.value} ${lastName.current.value}`\r\n                        })\r\n                    })\r\n                        .then(res => res.json())\r\n                        .then(createdUser => {\r\n                            if (createdUser.hasOwnProperty(\"id\")) {\r\n                                localStorage.setItem(\"moto_user\", createdUser.id)\r\n                                history.push(\"/\")\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    conflictDialog.current.showModal()\r\n                }\r\n            })\r\n        \r\n    }\r\n\r\n    return (\r\n        <main className='register__form' style={{ textAlign: \"center\" }}>\r\n\r\n            <dialog className=\"dialog dialog--password\" ref={conflictDialog}>\r\n                <div>Account with that email address already exists</div>\r\n                <button className=\"button--close\" onClick={e => conflictDialog.current.close()}>Close</button>\r\n            </dialog>\r\n\r\n            <form className=\"form--login\" onSubmit={handleRegister}>\r\n                <h1 className=\"h3 mb-3 font-weight-normal\">Please Register for Moto-Maintenance</h1>\r\n                <fieldset>\r\n                    <label htmlFor=\"firstName\"> First Name </label>\r\n                    <input ref={firstName} type=\"text\" name=\"firstName\" className=\"form-control\" placeholder=\"First name\" required autoFocus />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"lastName\"> Last Name </label>\r\n                    <input ref={lastName} type=\"text\" name=\"lastName\" className=\"form-control\" placeholder=\"Last name\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <label htmlFor=\"inputEmail\"> Email address </label>\r\n                    <input ref={email} type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Email address\" required />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <button type=\"submit\"> Sign in </button>\r\n                </fieldset>\r\n            </form>\r\n        </main>\r\n    )\r\n}\r\n\r\n","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Home.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleList.js",["93","94"],"import React, { useState, useContext, useEffect } from \"react\"\r\nimport { VehicleContext } from \"./VehicleProvider\"\r\nimport { VehicleCard } from \"./VehicleCard\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport \"./Vehicle.css\"\r\n\r\n\r\n\r\nexport const VehicleList = () => {\r\n    const { getVehicles, vehicles } = useContext(VehicleContext)\r\n    const { vehicle, setVehicle } =useState({})\r\n    const vehicleId = vehicles.id\r\n    const history = useHistory()\r\n    useEffect(()=>{\r\n        getVehicles()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"vehicles\">\r\n          <section className='vehicle--title'>Vehicles</section>\r\n\t\t      <button className=\"addBtn\"onClick={() => {history.push(\"/vehicles/create\")}}>\r\n            Add Vehicle\r\n          </button>\r\n          {\r\n            vehicles.map(vehicle => {\r\n          return <VehicleCard key={vehicle.id} vehicle={vehicle} />\r\n          })}\r\n          </div>\r\n\r\n    )\r\n          \r\n          \r\n}","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\auth\\Logout.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleProvider.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleForm.js",["95"],"import React, { useContext, useState, useEffect } from \"react\"\r\nimport { VehicleContext } from \"../Vehicle/VehicleProvider\"\r\n\r\nimport \"./Vehicle.css\"\r\nimport { useHistory, useParams} from 'react-router-dom';\r\n\r\nexport const VehicleForm = () => {\r\n    const { addVehicle, updateVehicle, getVehicleById } = useContext(VehicleContext)\r\n    const [vehicle, setVehicle] = useState({});\r\n    \r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const {vehicleId} = useParams()\r\n  \r\n      const history = useHistory();\r\n  \r\n      const handleControlledInputChange = (event) => {\r\n        const newVehicle = { ...vehicle }\r\n\r\n\r\n          newVehicle[event.target.id] = event.target.value\r\n\r\n          setVehicle(newVehicle)\r\n    }\r\n\r\n\r\n  const handleSaveVehicle = () => {\r\n    \r\n      \r\n        const make = vehicle.make\r\n        const model = vehicle.model\r\n        const year = vehicle.year\r\n        const user = localStorage.getItem(\"moto_user\")\r\n      \r\n        if (make === \"\" || model === \"\" || year === 0) {\r\n        window.alert(\"Please enter a make, model and a year\")\r\n      } else {\r\n         \r\n        setIsLoading(true);\r\n        if (vehicleId){\r\n          updateVehicle({\r\n            id: vehicle.id,\r\n            userId: user,\r\n            make: vehicle.make,\r\n            model: vehicle.model,\r\n            year: vehicle.year,\r\n            notes: vehicle.notes,\r\n            timestamp: Date.now()\r\n          })\r\n          .then(() => history.push(`/vehicles/detail/${vehicle.id}`))\r\n        } else {\r\n          \r\n          addVehicle({\r\n            id:vehicle.id,\r\n            userId: user,\r\n            make: vehicle.make,\r\n            model: vehicle.model, \r\n            year: vehicle.year,\r\n            notes: vehicle.notes,\r\n            timestamp: Date.now()\r\n          })\r\n          .then(() => history.push('./vehicles'))\r\n        }\r\n        \r\n      }\r\n    }\r\n    useEffect(() => {\r\n      \r\n        if (vehicleId){\r\n          getVehicleById(vehicleId)\r\n          .then(vehicle => {\r\n              setVehicle(vehicle)\r\n              setIsLoading(false)\r\n          })\r\n        } else {\r\n          setIsLoading(false)\r\n        }\r\n      \r\n    }, [])\r\n\r\n    return (\r\n        <form className=\"vehicleForm\">\r\n            <h2 className=\"vehicleForm__title\">Enter Your Info</h2>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"make\"> Make:</label>\r\n                    <input type=\"text\" id=\"make\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Vehicle Make\" value={vehicle.make}/>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"model\"> Model:</label>\r\n                    <input type=\"text\" id=\"model\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Vehicle Model\" value={vehicle.model}/>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"year\"> Year:</label>\r\n                    <input type=\"text\" id=\"year\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Vehicle Year\" value={vehicle.year}/>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n            <div className=\"form-group\">\r\n                    <label htmlFor=\"notes\"> Notes:</label>\r\n                    <input type=\"text\" id=\"notes\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Vehicle Notes\" value={vehicle.notes}/>\r\n                </div>\r\n            </fieldset>\r\n           \r\n            <button className=\"btn btn-primary\"\r\n               disabled={isLoading}\r\n              onClick={event => {\r\n            event.preventDefault() // Prevent browser from submitting the form and refreshing the page\r\n            handleSaveVehicle()\r\n          }}>\r\n              Save Vehicle\r\n            </button>\r\n        </form>\r\n      )\r\n} \r\n","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleDetails.js",["96"],"import React, { useContext, useEffect, useState } from \"react\"\r\nimport { VehicleContext } from \"./VehicleProvider\"\r\nimport \"./Vehicle.css\"\r\nimport { useParams, useHistory } from \"react-router-dom\"\r\n\r\nexport const VehicleDetail = () => {\r\n  const { getVehicleById } = useContext(VehicleContext)\r\n\r\n\tconst [vehicle, setVehicle] = useState({})\r\n\r\n\tconst {vehicleId} = useParams();\r\n\tconst history = useHistory();\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect\", vehicleId)\r\n    getVehicleById(vehicleId)\r\n    .then((response) => {\r\n      setVehicle(response)\r\n    })\r\n    }, [])\r\n\r\n  return (\r\n    <section className=\"vehicle\">\r\n      <h3 className=\"vehicle__name\">{vehicle.year} {vehicle.make} {vehicle.model}</h3>\r\n      <div className=\"vehicle__notes\">{vehicle.notes}</div>\r\n      <button className='edit__vehicle' onClick={() => {\r\n            history.push(`/vehicles/edit/${vehicleId}`)}}>Edit Vehicle</button>\r\n        \r\n    </section>\r\n  )\r\n}","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Vehicle\\VehicleCard.js",["97"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport const VehicleCard = ({vehicle}) => (\r\n    <section className='vehicle'>\r\n        <img src={vehicle.image} alt=\"Image Not Available\"></img>\r\n        <h3 className='vehicle__name'>\r\n            <Link to={`/vehicles/detail/${vehicle.id}`}>{ vehicle.year } { vehicle.make } { vehicle.model }</Link>\r\n        </h3>\r\n    </section>\r\n)\r\n       \r\n","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceList.js",["98"],"import React, { useContext, useEffect } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { MaintenanceCard } from \"./MaintenanceCard\";\r\nimport { MaintenanceContext } from \"./MaintenanceProvider\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const MaintenanceList = () => {\r\n\r\n  const { maintenance, getMaintenance } = useContext(MaintenanceContext)\r\n\r\n\r\n  useEffect(() => {\r\n    getMaintenance()\r\n  }, [])\r\n\r\n  const history = useHistory()\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"maintenance\">\r\n      <button className=\"backBtn\" onClick={() => history.goBack()}>Back</button>\r\n\r\n      {console.log(\"MaintenanceList:Render\", maintenance)}\r\n      <h2>Maintenance</h2>\r\n      <button className='addMtnBtn' onClick={() => { history.push(\"/maintenance/create\") }}>\r\n        Add New Maintenance\r\n          </button>\r\n      <div className=\"cardContainer\">\r\n        {\r\n          maintenance.map(m => {\r\n            return <MaintenanceCard key={m.id} maintenance={m} />\r\n          })\r\n        }\r\n\r\n      </div>\r\n    </section>\r\n\r\n  )\r\n\r\n}","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceProvider.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceForm.js",["99","100","101","102","103"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { VehicleContext } from '../Vehicle/VehicleProvider';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { MaintenanceContext } from \"./MaintenanceProvider\";\r\nimport \"./Maintenance.css\"\r\n\r\n\r\n\r\nexport const MaintenanceForm = () => {\r\n    const { vehicles, getVehicles } = useContext(VehicleContext)\r\n    const { getMaintenance, addMaintenance, getMaintenanceById, updateMaintenance, deleteMaintenance } = useContext(MaintenanceContext)\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [maintenance, setMaintenance] = useState({});\r\n\r\n    const history = useHistory();\r\n    const {maintenanceId}  = useParams();\r\n   \r\n   \r\n\r\n    useEffect(() => {\r\n      getVehicles()\r\n      .then(() => {\r\n        if (maintenanceId){\r\n          getMaintenanceById(maintenanceId)\r\n          .then(maintenance => {\r\n            setMaintenance(maintenance)\r\n            setIsLoading(false)\r\n          })\r\n        } else {\r\n          setIsLoading(false)\r\n        }\r\n      \r\n      })\r\n    }, [])\r\n\r\n    \r\n    const handleControlledInputChange = (event) => {\r\n    \r\n      const newMainEvent = { ...maintenance }\r\n      \r\n     \r\n      newMainEvent[event.target.id] = event.target.value\r\n      \r\n      setMaintenance(newMainEvent)\r\n    }\r\n\r\n    \r\n    const handleClickSaveMaintenance = (event) => {\r\n    {\r\n      event.preventDefault()\r\n\r\n      \r\n      const user = localStorage.getItem(\"moto_user\")\r\n      \r\n      if (maintenanceId) {\r\n        updateMaintenance({\r\n          id: parseInt(maintenance.id),\r\n          userId: parseInt(user),\r\n          vehicleId:maintenance.vehicleId,\r\n          toComplete:maintenance.toComplete,\r\n          requiredItems:maintenance.requiredItems,\r\n          isComplete: false,\r\n          timeStamp: Date.now()\r\n        })\r\n        .then(() => history.push('../'))\r\n      }  else {\r\n        setIsLoading(true)\r\n        addMaintenance({\r\n          userId: parseInt(user),\r\n          vehicleId:parseInt(maintenance.vehicleId),\r\n          toComplete: maintenance.toComplete,\r\n          requiredItems: maintenance.requiredItems,\r\n          isComplete: false,\r\n          timeStamp: Date.now()\r\n    \r\n        })\r\n        .then(() => history.push(`/vehicles/detail/${maintenance.vehicleId}`))\r\n      }\r\n    }\r\n  }\r\n\r\n    return (\r\n      <form className=\"MaintenanceForm\">\r\n       <button className=\"backBtn\" onClick={() => history.goBack()}>Back</button>\r\n          <h2 className=\"MaintenanceForm__title\">Enter Maintenance Event</h2>\r\n          <fieldset>\r\n              <div className=\"form-group-vehicle\">\r\n                  <label htmlFor=\"vehicle\">Assign to vehicle: </label>\r\n                  <select  name=\"vehicleId\" id=\"vehicleId\" onChange={handleControlledInputChange} className=\"form-control\" >\r\n                      <option value=\"0\">Select a vehicle</option>\r\n                      {vehicles.map(v => (\r\n                          <option key={v.id} value={v.id}>\r\n                          {`${v.year} ${v.make} ${v.model}`} \r\n                          </option>\r\n                      ))}\r\n                  </select>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"toComplete\">Maintenance Needed:</label>\r\n                  <input type=\"text\" id=\"toComplete\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Maintenance Needed\" value={maintenance.toComplete}/>\r\n              </div>\r\n          </fieldset>\r\n          <fieldset>\r\n              <div className=\"form-group\">\r\n                  <label htmlFor=\"requiredItems\">Required Items</label>\r\n                  <input type=\"text\" id=\"requiredItems\" onChange={handleControlledInputChange} required autoFocus className=\"form-control\" placeholder=\"Required Items\" value={maintenance.requiredItems}/>\r\n              </div>\r\n             \r\n          </fieldset>\r\n        \r\n          \r\n          <button className=\"btn btn-primary\"\r\n            onClick={handleClickSaveMaintenance}>\r\n            Save Maintenance Event\r\n          </button>\r\n          \r\n      </form>\r\n    )\r\n}","C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceDetails.js",[],"C:\\Users\\jorda\\workspace\\moto-maintenance\\src\\Components\\Maintenance\\MaintenanceCard.js",["104","105"],"import React, { useContext, useState } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\n\r\nexport const MaintenanceCard = ({maintenance}) =>  {\r\n        \r\n\r\n    if (maintenance.isComplete === true) {\r\n        return (\r\n    \r\n          <section hidden>\r\n            <h3 className='name'>\r\n              Completed Maintenance\r\n          </h3>\r\n            <div className=\"toComplete\"> {maintenance.toComplete} </div>\r\n            <div className=\"requiredItems\"> {maintenance.requiredItems} </div>\r\n          </section>\r\n        )\r\n      } else {\r\n          return (\r\n        <section className='maintenanceCard'>\r\n        <h3 className='vehicleName'>\r\n                <Link to={`/vehicles/detail/${maintenance.vehicle.id}`}>{ maintenance.vehicle.year } { maintenance.vehicle.make } { maintenance.vehicle.model }</Link>\r\n            </h3>\r\n            <div className=\"toComplete\"> {maintenance.toComplete} </div>\r\n            <div className=\"requiredItems\"> {maintenance.requiredItems} </div>\r\n            <button className='edit'> <Link to={`/maintenance/edit/${maintenance.id}`}>Edit</Link> </button>\r\n        </section>\r\n          )\r\n      }\r\n    \r\n}\r\n\r\n\r\n\r\n",{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":9,"column":11,"nodeType":"112","messageId":"113","endLine":9,"endColumn":19},{"ruleId":"114","severity":1,"message":"115","line":20,"column":18,"nodeType":"116","endLine":20,"endColumn":77},{"ruleId":"114","severity":1,"message":"115","line":23,"column":18,"nodeType":"116","endLine":23,"endColumn":80},{"ruleId":"114","severity":1,"message":"115","line":26,"column":18,"nodeType":"116","endLine":26,"endColumn":117},{"ruleId":"114","severity":1,"message":"115","line":29,"column":18,"nodeType":"116","endLine":29,"endColumn":72},{"ruleId":"110","severity":1,"message":"117","line":9,"column":11,"nodeType":"112","messageId":"113","endLine":9,"endColumn":25},{"ruleId":"110","severity":1,"message":"118","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"120","line":16,"column":8,"nodeType":"121","endLine":16,"endColumn":10,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":78,"column":8,"nodeType":"121","endLine":78,"endColumn":10,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":43,"column":6,"nodeType":"121","endLine":43,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":7,"column":9,"nodeType":"116","endLine":7,"endColumn":60},{"ruleId":"119","severity":1,"message":"129","line":21,"column":6,"nodeType":"121","endLine":21,"endColumn":8,"suggestions":"130"},{"ruleId":"110","severity":1,"message":"131","line":11,"column":13,"nodeType":"112","messageId":"113","endLine":11,"endColumn":27},{"ruleId":"110","severity":1,"message":"132","line":11,"column":84,"nodeType":"112","messageId":"113","endLine":11,"endColumn":101},{"ruleId":"110","severity":1,"message":"133","line":12,"column":12,"nodeType":"112","messageId":"113","endLine":12,"endColumn":21},{"ruleId":"119","severity":1,"message":"134","line":34,"column":8,"nodeType":"121","endLine":34,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":49,"column":5,"nodeType":"138","messageId":"139","endLine":79,"endColumn":6},{"ruleId":"110","severity":1,"message":"140","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":27},{"ruleId":"110","severity":1,"message":"118","line":1,"column":29,"nodeType":"112","messageId":"113","endLine":1,"endColumn":37},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'password' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'verifyPassword' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getVehicles'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has missing dependencies: 'getVehicleById' and 'vehicleId'. Either include them or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'refreshVehicle' and 'vehicleId'. Either include them or remove the dependency array.",["145"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'getMaintenance'. Either include it or remove the dependency array.",["146"],"'getMaintenance' is assigned a value but never used.","'deleteMaintenance' is assigned a value but never used.","'isLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getMaintenanceById', 'getVehicles', and 'maintenanceId'. Either include them or remove the dependency array.",["147"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},"Update the dependencies array to be: [getVehicles]",{"range":"158","text":"159"},"Update the dependencies array to be: [getVehicleById, vehicleId]",{"range":"160","text":"161"},"Update the dependencies array to be: [refreshVehicle, vehicleId]",{"range":"162","text":"163"},"Update the dependencies array to be: [getMaintenance]",{"range":"164","text":"165"},"Update the dependencies array to be: [getMaintenanceById, getVehicles, maintenanceId]",{"range":"166","text":"167"},[437,439],"[getVehicles]",[2194,2196],"[getVehicleById, vehicleId]",[1204,1206],"[refreshVehicle, vehicleId]",[402,404],"[getMaintenance]",[1073,1075],"[getMaintenanceById, getVehicles, maintenanceId]"]